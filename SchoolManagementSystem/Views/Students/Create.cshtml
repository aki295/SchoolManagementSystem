@model SchoolManagementSystem.ViewModels.StudentViewModel

@{
    Layout = null;
}

@using (Ajax.BeginForm(new AjaxOptions { }))
{
    @Html.AntiForgeryToken()
    if (Model != null && Model.Student.StudentId > 0)
    {
        @Html.HiddenFor(a => a.Student.StudentId)
    }
    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Student.Name, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Student.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Surname, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Student.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Patronymic, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Student.Patronymic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Patronymic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Email, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Student.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Student.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Student.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Courses, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.DropDownList("Courses", (IEnumerable<SelectListItem>)ViewBag.Courses)
                @Html.ValidationMessageFor(model => model.Student.Courses, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Activity, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.CheckBoxFor(model => model.Student.Activity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Activity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Sex, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-5">
                @Html.RadioButtonFor(model => model.Student.Sex, "true", new { htmlAttributes = new { @class = "form-control" } }) Male  
                @Html.RadioButtonFor(model => model.Student.Sex, "false", new { htmlAttributes = new { @class = "form-control" } }) Female
                @Html.ValidationMessageFor(model => model.Student.Sex, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
   </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
